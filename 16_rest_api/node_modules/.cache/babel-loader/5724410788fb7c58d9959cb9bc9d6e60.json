{"ast":null,"code":"var _jsxFileName = \"/Users/s.kitagawa/Practice/React/react-guide-material/16_rest_api/src/030_json_server/end/Example.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// POINT JSON server とは\n// API のモックを手軽に作成できる node.js のライブラリです。\n// APIモックとは モックアップのことで、開発環境用の簡易APIのことです。\n\n// JSON server をインストールする\n// npm i -D json-server\n\n// json ファイルを用意する\n\n// オブジェクト形式で、パス名をkeyにする\n// {\n//   \"パス名\": json形式のデータ\n// }\n\n// npx json-server -w src/**/db.json\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    console.log('useEffect');\n    //  *axios(async/await)の書き方\n    const getUsers = async () => {\n      const res = await axios.get('http://localhost:3003/user');\n      setUser(res.data);\n    };\n    getUsers();\n\n    // *フェッチの書き方\n    // fetch('http://localhost:3003/user').then((res) => {\n    //   res.json().then((data) => {\n    //     console.log(data);\n    //   });\n    // });\n\n    // *axios(then)の書き方\n    // axios.get('http://localhost:3003/todo').then((res) => {\n    //   console.log(res.data);\n    // });\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: user === null || user === void 0 ? void 0 : user.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.id, \": \", user.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), \"\\u5E74\\u9F62:\", user.age, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), \"\\u8DA3\\u5473:\", user.hobbies.join('と')]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useEffect","useState","axios","Example","user","setUser","console","log","getUsers","res","get","data","map","id","username","age","hobbies","join"],"sources":["/Users/s.kitagawa/Practice/React/react-guide-material/16_rest_api/src/030_json_server/end/Example.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// POINT JSON server とは\n// API のモックを手軽に作成できる node.js のライブラリです。\n// APIモックとは モックアップのことで、開発環境用の簡易APIのことです。\n\n// JSON server をインストールする\n// npm i -D json-server\n\n// json ファイルを用意する\n\n// オブジェクト形式で、パス名をkeyにする\n// {\n//   \"パス名\": json形式のデータ\n// }\n\n// npx json-server -w src/**/db.json\n\nconst Example = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    console.log('useEffect');\n    //  *axios(async/await)の書き方\n    const getUsers = async () => {\n      const res = await axios.get('http://localhost:3003/user');\n      setUser(res.data);\n    };\n    getUsers();\n\n    // *フェッチの書き方\n    // fetch('http://localhost:3003/user').then((res) => {\n    //   res.json().then((data) => {\n    //     console.log(data);\n    //   });\n    // });\n\n    // *axios(then)の書き方\n    // axios.get('http://localhost:3003/todo').then((res) => {\n    //   console.log(res.data);\n    // });\n  });\n\n  return (\n    <div>\n      <h1>ユーザー一覧</h1>\n      <ul>\n        {user?.map((user) => {\n          return (\n            <li key={user.id}>\n              {user.id}: {user.username}\n              <br />\n              年齢:{user.age}\n              <br />\n              趣味:{user.hobbies.join('と')}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdM,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB;IACA,MAAMC,QAAQ,GAAG,YAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,4BAA4B,CAAC;MACzDL,OAAO,CAACI,GAAG,CAACE,IAAI,CAAC;IACnB,CAAC;IACDH,QAAQ,EAAE;;IAEV;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EACF,CAAC,CAAC;;EAEF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACf;MAAA,UACGJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,GAAG,CAAER,IAAI,IAAK;QACnB,oBACE;UAAA,WACGA,IAAI,CAACS,EAAE,QAAIT,IAAI,CAACU,QAAQ,eACzB;YAAA;YAAA;YAAA;UAAA,QAAM,mBACFV,IAAI,CAACW,GAAG,eACZ;YAAA;YAAA;YAAA;UAAA,QAAM,mBACFX,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QAAA,GALnBb,IAAI,CAACS,EAAE;UAAA;UAAA;UAAA;QAAA,QAMX;MAET,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA3CIV,OAAO;AAAA,KAAPA,OAAO;AA6Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}