{"ast":null,"code":"var _jsxFileName = \"/Users/s.kitagawa/Practice/React/react-guide-material/16_rest_api/src/060_other_method/start/context/TodoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport axios from 'axios';\nimport { createContext, useContext, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TODO_API_URL = 'http://localhost:3003/todo';\nconst TodoContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\n\n// この初期値をapiに変える\nconst todosList = [{\n  id: 1,\n  content: '店予約する',\n  editing: false\n}, {\n  id: 2,\n  content: '卵買う',\n  editing: false\n}, {\n  id: 3,\n  content: '郵便出す',\n  editing: false\n}];\nconst todoReducer = (todos, action) => {\n  switch (action.type) {\n    case 'todo/add':\n      return [...todos, action.todo];\n    case 'todo/delete':\n      return todos.filter(todo => {\n        return todo.id !== action.todo.id;\n      });\n    case 'todo/update':\n      return todos.map(_todo => {\n        return _todo.id === action.todo.id ? {\n          ..._todo,\n          ...action.todo\n        } : {\n          ..._todo\n        };\n      });\n    default:\n      return todos;\n  }\n};\nconst TodoProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // stateの初期値をapiに変える\n  const [todos, dispatch] = useReducer(todoReducer, []);\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await axios.get(TODO_API_URL);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: todos,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoProvider, \"57e3gcw8r0P+1wKJWvtiHwisqas=\");\n_c = TodoProvider;\nconst useTodos = () => {\n  _s2();\n  return useContext(TodoContext);\n};\n_s2(useTodos, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst useDispatchTodos = () => {\n  _s3();\n  return useContext(TodoDispatchContext);\n};\n_s3(useDispatchTodos, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useTodos, useDispatchTodos, TodoProvider };\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["axios","createContext","useContext","useEffect","useReducer","TODO_API_URL","TodoContext","TodoDispatchContext","todosList","id","content","editing","todoReducer","todos","action","type","todo","filter","map","_todo","TodoProvider","children","dispatch","getTodos","res","get","useTodos","useDispatchTodos"],"sources":["/Users/s.kitagawa/Practice/React/react-guide-material/16_rest_api/src/060_other_method/start/context/TodoContext.js"],"sourcesContent":["import axios from 'axios';\nimport { createContext, useContext, useEffect, useReducer } from 'react';\n\nconst TODO_API_URL = 'http://localhost:3003/todo';\n\nconst TodoContext = createContext();\nconst TodoDispatchContext = createContext();\n\n// この初期値をapiに変える\nconst todosList = [\n  {\n    id: 1,\n    content: '店予約する',\n    editing: false,\n  },\n  {\n    id: 2,\n    content: '卵買う',\n    editing: false,\n  },\n  {\n    id: 3,\n    content: '郵便出す',\n    editing: false,\n  },\n];\n\nconst todoReducer = (todos, action) => {\n  switch (action.type) {\n    case 'todo/add':\n      return [...todos, action.todo];\n    case 'todo/delete':\n      return todos.filter((todo) => {\n        return todo.id !== action.todo.id;\n      });\n    case 'todo/update':\n      return todos.map((_todo) => {\n        return _todo.id === action.todo.id\n          ? { ..._todo, ...action.todo }\n          : { ..._todo };\n      });\n    default:\n      return todos;\n  }\n};\n\nconst TodoProvider = ({ children }) => {\n  // stateの初期値をapiに変える\n  const [todos, dispatch] = useReducer(todoReducer, []);\n\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await axios.get(TODO_API_URL);\n    };\n  }, []);\n\n  return (\n    <TodoContext.Provider value={todos}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        {children}\n      </TodoDispatchContext.Provider>\n    </TodoContext.Provider>\n  );\n};\n\nconst useTodos = () => useContext(TodoContext);\nconst useDispatchTodos = () => useContext(TodoDispatchContext);\n\nexport { useTodos, useDispatchTodos, TodoProvider };\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC;AAEzE,MAAMC,YAAY,GAAG,4BAA4B;AAEjD,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AACnC,MAAMM,mBAAmB,gBAAGN,aAAa,EAAE;;AAE3C;AACA,MAAMO,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,OAAO;EAChBC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,IAAI,CAAC;IAChC,KAAK,aAAa;MAChB,OAAOH,KAAK,CAACI,MAAM,CAAED,IAAI,IAAK;QAC5B,OAAOA,IAAI,CAACP,EAAE,KAAKK,MAAM,CAACE,IAAI,CAACP,EAAE;MACnC,CAAC,CAAC;IACJ,KAAK,aAAa;MAChB,OAAOI,KAAK,CAACK,GAAG,CAAEC,KAAK,IAAK;QAC1B,OAAOA,KAAK,CAACV,EAAE,KAAKK,MAAM,CAACE,IAAI,CAACP,EAAE,GAC9B;UAAE,GAAGU,KAAK;UAAE,GAAGL,MAAM,CAACE;QAAK,CAAC,GAC5B;UAAE,GAAGG;QAAM,CAAC;MAClB,CAAC,CAAC;IACJ;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMO,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAChC;EACA,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGlB,UAAU,CAACQ,WAAW,EAAE,EAAE,CAAC;EAErDT,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,YAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAACpB,YAAY,CAAC;IAC3C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEQ,KAAM;IAAA,uBACjC,QAAC,mBAAmB,CAAC,QAAQ;MAAC,KAAK,EAAES,QAAS;MAAA,UAC3CD;IAAQ;MAAA;MAAA;MAAA;IAAA;EACoB;IAAA;IAAA;IAAA;EAAA,QACV;AAE3B,CAAC;AAAC,GAjBID,YAAY;AAAA,KAAZA,YAAY;AAmBlB,MAAMM,QAAQ,GAAG;EAAA;EAAA,OAAMxB,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC,IAAzCoB,QAAQ;AACd,MAAMC,gBAAgB,GAAG;EAAA;EAAA,OAAMzB,UAAU,CAACK,mBAAmB,CAAC;AAAA;AAAC,IAAzDoB,gBAAgB;AAEtB,SAASD,QAAQ,EAAEC,gBAAgB,EAAEP,YAAY;AAAG;AAAA"},"metadata":{},"sourceType":"module"}