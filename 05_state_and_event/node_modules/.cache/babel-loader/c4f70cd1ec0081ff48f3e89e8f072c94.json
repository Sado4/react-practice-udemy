{"ast":null,"code":"var _jsxFileName = \"/Users/s.kitagawa/Desktop/react-guide-material/05_state_and_event/src/050_prev_state/end/Example.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n/* \nPOINT stateの更新は予約される（すぐには更新されない。）\nPOINT 更新予定のstateの値の取得方法\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const countUp = () => {\n    setCount(count + 1);\n    setCount((prevstate\n    /* 現在のstateの値 */\n    ) => {\n      return prevstate + 1;\n      /* 次のstateの値 */\n    });\n    console.log(count);\n  };\n\n  const countDown = () => {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","Example","count","setCount","countUp","prevstate","console","log","countDown"],"sources":["/Users/s.kitagawa/Desktop/react-guide-material/05_state_and_event/src/050_prev_state/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\n/* \nPOINT stateの更新は予約される（すぐには更新されない。）\nPOINT 更新予定のstateの値の取得方法\n*/\nconst Example = () => {\n  const [count, setCount] = useState(0);\n  const countUp = () => {\n    setCount(count + 1);\n    setCount(prevstate /* 現在のstateの値 */ => {\n      return prevstate + 1; /* 次のstateの値 */\n    } );\n    console.log(count);\n  };\n  const countDown = () => {\n    setCount(count - 1);\n  };\n  return (\n    <>\n      <p>現在のカウント数: {count}</p>\n      <button\n        onClick={countUp}\n      >+</button>\n      <button\n        onClick={countDown}\n      >-</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA;AACA;AACA;AACA;;;;;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;EACA,MAAMI,OAAO,GAAG,MAAM;IACpBD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACAC,QAAQ,CAAC,CAAAE;IAAU;IAAD,KAAqB;MACrC,OAAOA,SAAS,GAAG,CAAnB;MAAsB;IACvB,CAFO,CAAR;IAGAC,OAAO,CAACC,GAAR,CAAYL,KAAZ;EACD,CAND;;EAOA,MAAMM,SAAS,GAAG,MAAM;IACtBL,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAA,iEAAcA,KAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,OAAO,EAAEE,OADX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MACE,OAAO,EAAEI,SADX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AAWD,CAvBD;;GAAMP,O;;KAAAA,O;AAyBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}